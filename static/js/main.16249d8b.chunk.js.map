{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","src","alt","MemeGenerator","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","fetch","then","response","json","memes","data","setState","event","target","name","value","this","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","console","log","className","onSubmit","type","placeholder","onChange","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAgBeA,MAdf,WACE,OACE,6BACE,gCACE,yBACEC,IAAI,iEACJC,IAAI,aAEN,gD,0CCuDOC,E,kDA9Db,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,QAAS,GACTC,WAAY,GACZC,UAAW,qJACXC,YAAa,IAEf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATR,E,gEAWO,IAAD,OAClBE,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAc,IACXE,EAAUF,EAASG,KAAnBD,MACR,EAAKE,SAAS,CAAEV,YAAaQ,S,mCAItBG,GAAQ,IAAD,EACKA,EAAMC,OAArBC,EADU,EACVA,KAAMC,EADI,EACJA,MACdC,KAAKL,SAAL,eAAiBG,EAAOC,M,mCAEbH,GACXA,EAAMK,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAUL,KAAKnB,MAAMI,YAAYqB,QAC3DC,EAAaP,KAAKnB,MAAMI,YAAYiB,GAASM,IACnDC,QAAQC,IAAIR,EAAQ,IAAIK,GACxBP,KAAKL,SAAS,CAACX,UAAWuB,M,+BAG1B,OACE,yBAAKI,UAAU,aACb,0BAAMA,UAAU,YAAYC,SAAUZ,KAAKZ,cACzC,sDACA,2BACEyB,KAAK,OACLf,KAAK,UACLgB,YAAY,WACZf,MAAOC,KAAKnB,MAAMC,QAClBiC,SAAUf,KAAKd,eAEjB,2BACE2B,KAAK,OACLf,KAAK,aACLgB,YAAY,cACZf,MAAOC,KAAKnB,MAAME,WAClBgC,SAAUf,KAAKd,eAEjB,8CAEF,yBAAKyB,UAAU,QACb,yBAAKjC,IAAKsB,KAAKnB,MAAMG,UAAWL,IAAI,aACpC,wBAAIgC,UAAU,OAAOX,KAAKnB,MAAMC,SAChC,wBAAI6B,UAAU,UAAUX,KAAKnB,MAAME,kB,GAxDjBiC,aCYbC,MATf,WACE,OACE,yBAAKN,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJNO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.16249d8b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <img\r\n          src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\r\n          alt=\"problem?\"\r\n        />\r\n        <p>Meme generator</p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MemeGenerator extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      topText: \"\",\r\n      bottomText: \"\",\r\n      randomImg: \"https://sportshub.cbsistatic.com/i/r/2019/10/14/62d02fd3-6290-4155-91ac-0c1b3b4c5057/thumbnail/300x300/9cabea4b22fda66ec550fbc445d32ad0/400553.png\",\r\n      allMemeImgs: [],\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        const { memes } = response.data;\r\n        this.setState({ allMemeImgs: memes });\r\n      });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value} = event.target;\r\n    this.setState({ [name]: value});\r\n  }\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    const randNum = Math.floor(Math.random()* this.state.allMemeImgs.length)\r\n    const randMemeImg= this.state.allMemeImgs[randNum].url\r\n    console.log(randNum+\" \"+randMemeImg);\r\n    this.setState({randomImg: randMemeImg})\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n          <h1>Meme Generator Section</h1>\r\n          <input\r\n            type=\"text\"\r\n            name=\"topText\"\r\n            placeholder=\"Top Text\"\r\n            value={this.state.topText}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"bottomText\"\r\n            placeholder=\"Bottom Text\"\r\n            value={this.state.bottomText}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button>Generate!</button>\r\n        </form>\r\n        <div className=\"meme\">\r\n          <img src={this.state.randomImg} alt=\"noo img?\"/>\r\n          <h2 className=\"top\">{this.state.topText}</h2>\r\n          <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemeGenerator;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport MemeGenerator from \"./MemeGenerator\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <MemeGenerator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}